(1) Explain the sequence of events that leads pageFault getting called: what
    the test program does, what the architecture does, and what the kernel
    code does

    The function pageFault is called by the architecture whenever a page fault occurs. The CPU puts the address which called the fault into CR2. Then pageFaultHandler is called. It is described in question number 4. A pageFault occurs when an address greater than 0x20000000 is trying to be mapped. There isn't space for it, so we map it to an arbitrary physical address provided by the frame() function in our pageFault() function.


(2) Explain the TLB. What problem does it solve? what problem does it
    introduce?

    TLB stands for translation lookaside buffer. It is a cache that memory management hardware to improve virtual address translation speed. The problem it solves is memory accesses that are popular are stored in a cache so that they can be accessed efficiently. However, when the memory access is not a hit in the table, the translation looks up the page table and it is very inefficient.




(3) Explain the strange loop before calling paging(). Why is it there? What
    happens if you call paging() without this loop?

    for (uint32_t p = 0; p < 0x200000; p += 4096) {
        map(p,p);
    }

    This loop maps every virtual address under 0x20000000 to itself, basically setting the default physical addresses for the corresponding virtual addresses. Once paging() is called, everything becomes virtual. Without the loop, the return address put on the stack when calling paging will be invalid. There would be no preexisting page director or page table without calling map before paging since the page directory is initialized in the map() function.



(4) Explain what the assembly function pageFaultHandler does. Who calls it?
    Why is it doing what's doing with the registers?

    The function pageFaultHandler saves all the registers along with the EFLAGS register and then grabs the address that caused the fault from CR2 and passes it to the pageFault() function. Once the function returns, the values of all the registers are restored and it returns from the interrupt using iret.
